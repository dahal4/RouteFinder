import 'package:route_finder_final/widget/drawer.dart';
import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:latlong2/latlong.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'dart:math' show cos, sqrt, asin;

final apikey ='pk.eyJ1IjoibWFuaXNoZGFoYWwiLCJhIjoiY2tpYWJkdDB6MGFqbTJzcnRpMmE4OWFlNiJ9.yW5q2POpsb9rkIZetl1omw';

class KalToKot extends StatefulWidget {
  @override
  _KalToKotState createState() => _KalToKotState();
}

class _KalToKotState extends State<KalToKot> {

  var kalankiToKoteshwor = [
    {"lat": 27.69333, "lng": 85.28165},
    {"lat": 27.69334, "lng": 85.28169},
    {"lat": 27.69334, "lng": 85.28169},
    {"lat": 27.69311, "lng": 85.28174},
    {"lat": 27.69283, "lng": 85.28182},
    {"lat": 27.69265, "lng": 85.2819},
    {"lat": 27.69253, "lng": 85.28195},
    {"lat": 27.6923, "lng": 85.2821},
    {"lat": 27.69194, "lng": 85.28235},
    {"lat": 27.69122, "lng": 85.28284},
    {"lat": 27.69015, "lng": 85.28355},
    {"lat": 27.69005, "lng": 85.28363},
    {"lat": 27.68997, "lng": 85.2837},
    {"lat": 27.68959, "lng": 85.28399},
    {"lat": 27.68945, "lng": 85.28409},
    {"lat": 27.68927, "lng": 85.28424},
    {"lat": 27.68917, "lng": 85.28433},
    {"lat": 27.68908, "lng": 85.28442},
    {"lat": 27.68893, "lng": 85.28461},
    {"lat": 27.68877, "lng": 85.28488},
    {"lat": 27.68866, "lng": 85.28516},
    {"lat": 27.68857, "lng": 85.28547},
    {"lat": 27.68852, "lng": 85.28579},
    {"lat": 27.68848, "lng": 85.28611},
    {"lat": 27.68844, "lng": 85.28635},
    {"lat": 27.68838, "lng": 85.28674},
    {"lat": 27.68831, "lng": 85.28726},
    {"lat": 27.68816, "lng": 85.28824},
    {"lat": 27.68805, "lng": 85.28881},
    {"lat": 27.68799, "lng": 85.28923},
    {"lat": 27.68795, "lng": 85.28953},
    {"lat": 27.68792, "lng": 85.28971},
    {"lat": 27.68787, "lng": 85.28989},
    {"lat": 27.68782, "lng": 85.29004},
    {"lat": 27.68777, "lng": 85.29018},
    {"lat": 27.68767, "lng": 85.29039},
    {"lat": 27.68759, "lng": 85.29055},
    {"lat": 27.6875, "lng": 85.2907},
    {"lat": 27.68725, "lng": 85.291},
    {"lat": 27.6864, "lng": 85.29216},
    {"lat": 27.68619, "lng": 85.29243},
    {"lat": 27.68595, "lng": 85.29275},
    {"lat": 27.68586, "lng": 85.29287},
    {"lat": 27.68579, "lng": 85.29298},
    {"lat": 27.68569, "lng": 85.29312},
    {"lat": 27.68565, "lng": 85.2932},
    {"lat": 27.68558, "lng": 85.29332},
    {"lat": 27.68551, "lng": 85.29348},
    {"lat": 27.68547, "lng": 85.29358},
    {"lat": 27.68546, "lng": 85.2936},
    {"lat": 27.68542, "lng": 85.2937},
    {"lat": 27.68539, "lng": 85.29382},
    {"lat": 27.68534, "lng": 85.29398},
    {"lat": 27.68531, "lng": 85.29413},
    {"lat": 27.68528, "lng": 85.29431},
    {"lat": 27.68521, "lng": 85.29484},
    {"lat": 27.68512, "lng": 85.2955},
    {"lat": 27.68503, "lng": 85.29632},
    {"lat": 27.68491, "lng": 85.29732},
    {"lat": 27.68488, "lng": 85.29752},
    {"lat": 27.68483, "lng": 85.29798},
    {"lat": 27.68481, "lng": 85.29825},
    {"lat": 27.68479, "lng": 85.29854},
    {"lat": 27.68477, "lng": 85.29872},
    {"lat": 27.68474, "lng": 85.2989},
    {"lat": 27.68459, "lng": 85.30021},
    {"lat": 27.68457, "lng": 85.30033},
    {"lat": 27.68451, "lng": 85.30068},
    {"lat": 27.68446, "lng": 85.30117},
    {"lat": 27.68444, "lng": 85.30135},
    {"lat": 27.68441, "lng": 85.3015},
    {"lat": 27.68438, "lng": 85.30161},
    {"lat": 27.68431, "lng": 85.30178},
    {"lat": 27.68424, "lng": 85.30188},
    {"lat": 27.68418, "lng": 85.30198},
    {"lat": 27.68412, "lng": 85.30206},
    {"lat": 27.68404, "lng": 85.30211},
    {"lat": 27.68396, "lng": 85.30218},
    {"lat": 27.68387, "lng": 85.30223},
    {"lat": 27.6838, "lng": 85.30227},
    {"lat": 27.68371, "lng": 85.30231},
    {"lat": 27.68362, "lng": 85.30235},
    {"lat": 27.6835, "lng": 85.30238},
    {"lat": 27.68341, "lng": 85.30239},
    {"lat": 27.68331, "lng": 85.3024},
    {"lat": 27.68312, "lng": 85.3024},
    {"lat": 27.68236, "lng": 85.30237},
    {"lat": 27.68171, "lng": 85.30233},
    {"lat": 27.68098, "lng": 85.30228},
    {"lat": 27.68042, "lng": 85.30224},
    {"lat": 27.67984, "lng": 85.30222},
    {"lat": 27.67845, "lng": 85.30218},
    {"lat": 27.67828, "lng": 85.30217},
    {"lat": 27.67779, "lng": 85.30215},
    {"lat": 27.67679, "lng": 85.30208},
    {"lat": 27.67633, "lng": 85.30206},
    {"lat": 27.67627, "lng": 85.30206},
    {"lat": 27.67567, "lng": 85.30205},
    {"lat": 27.67521, "lng": 85.30208},
    {"lat": 27.67476, "lng": 85.30214},
    {"lat": 27.67447, "lng": 85.30223},
    {"lat": 27.67395, "lng": 85.30245},
    {"lat": 27.67384, "lng": 85.30249},
    {"lat": 27.67366, "lng": 85.3026},
    {"lat": 27.6735, "lng": 85.30271},
    {"lat": 27.67259, "lng": 85.30342},
    {"lat": 27.67217, "lng": 85.30376},
    {"lat": 27.67139, "lng": 85.30434},
    {"lat": 27.67086, "lng": 85.30474},
    {"lat": 27.6702, "lng": 85.30523},
    {"lat": 27.67002, "lng": 85.30538},
    {"lat": 27.66944, "lng": 85.30585},
    {"lat": 27.66885, "lng": 85.30631},
    {"lat": 27.66855, "lng": 85.30655},
    {"lat": 27.66821, "lng": 85.30684},
    {"lat": 27.66814, "lng": 85.3069},
    {"lat": 27.66773, "lng": 85.30721},
    {"lat": 27.66726, "lng": 85.30758},
    {"lat": 27.66712, "lng": 85.30769},
    {"lat": 27.66702, "lng": 85.30782},
    {"lat": 27.66686, "lng": 85.30803},
    {"lat": 27.66676, "lng": 85.30819},
    {"lat": 27.66671, "lng": 85.30828},
    {"lat": 27.66667, "lng": 85.30836},
    {"lat": 27.66658, "lng": 85.30865},
    {"lat": 27.6664, "lng": 85.3092},
    {"lat": 27.66597, "lng": 85.31065},
    {"lat": 27.66582, "lng": 85.3112},
    {"lat": 27.66544, "lng": 85.31247},
    {"lat": 27.66528, "lng": 85.31304},
    {"lat": 27.66517, "lng": 85.31335},
    {"lat": 27.66506, "lng": 85.31356},
    {"lat": 27.66498, "lng": 85.31371},
    {"lat": 27.6649, "lng": 85.31384},
    {"lat": 27.6648, "lng": 85.31398},
    {"lat": 27.66469, "lng": 85.31413},
    {"lat": 27.66453, "lng": 85.31432},
    {"lat": 27.66433, "lng": 85.31458},
    {"lat": 27.6634, "lng": 85.31573},
    {"lat": 27.66285, "lng": 85.3164},
    {"lat": 27.66276, "lng": 85.31652},
    {"lat": 27.66249, "lng": 85.31685},
    {"lat": 27.6623, "lng": 85.31709},
    {"lat": 27.66139, "lng": 85.31825},
    {"lat": 27.66089, "lng": 85.31884},
    {"lat": 27.66061, "lng": 85.31919},
    {"lat": 27.66033, "lng": 85.31958},
    {"lat": 27.66022, "lng": 85.31971},
    {"lat": 27.65963, "lng": 85.32039},
    {"lat": 27.6593, "lng": 85.32079},
    {"lat": 27.65911, "lng": 85.32103},
    {"lat": 27.65907, "lng": 85.32109},
    {"lat": 27.65888, "lng": 85.32133},
    {"lat": 27.65858, "lng": 85.32171},
    {"lat": 27.65819, "lng": 85.32217},
    {"lat": 27.65814, "lng": 85.32224},
    {"lat": 27.65805, "lng": 85.32238},
    {"lat": 27.65801, "lng": 85.32246},
    {"lat": 27.65797, "lng": 85.32254},
    {"lat": 27.65793, "lng": 85.32263},
    {"lat": 27.6579, "lng": 85.32272},
    {"lat": 27.65789, "lng": 85.32284},
    {"lat": 27.65789, "lng": 85.32294},
    {"lat": 27.65789, "lng": 85.32303},
    {"lat": 27.65791, "lng": 85.32313},
    {"lat": 27.65792, "lng": 85.32321},
    {"lat": 27.65794, "lng": 85.3233},
    {"lat": 27.65797, "lng": 85.32337},
    {"lat": 27.658, "lng": 85.32345},
    {"lat": 27.65812, "lng": 85.32368},
    {"lat": 27.65825, "lng": 85.32392},
    {"lat": 27.65839, "lng": 85.32415},
    {"lat": 27.65851, "lng": 85.32437},
    {"lat": 27.65875, "lng": 85.32475},
    {"lat": 27.65895, "lng": 85.32512},
    {"lat": 27.65929, "lng": 85.32573},
    {"lat": 27.65957, "lng": 85.32613},
    {"lat": 27.65982, "lng": 85.32645},
    {"lat": 27.66003, "lng": 85.32667},
    {"lat": 27.66064, "lng": 85.32725},
    {"lat": 27.662, "lng": 85.32834},
    {"lat": 27.66268, "lng": 85.32891},
    {"lat": 27.66414, "lng": 85.3301},
    {"lat": 27.66429, "lng": 85.33023},
    {"lat": 27.66494, "lng": 85.33075},
    {"lat": 27.6654, "lng": 85.33114},
    {"lat": 27.66574, "lng": 85.33142},
    {"lat": 27.66597, "lng": 85.33162},
    {"lat": 27.66632, "lng": 85.33192},
    {"lat": 27.66646, "lng": 85.33203},
    {"lat": 27.66665, "lng": 85.33219},
    {"lat": 27.66683, "lng": 85.33233},
    {"lat": 27.66694, "lng": 85.33244},
    {"lat": 27.66703, "lng": 85.33253},
    {"lat": 27.66712, "lng": 85.33263},
    {"lat": 27.6673, "lng": 85.33283},
    {"lat": 27.66738, "lng": 85.33294},
    {"lat": 27.66748, "lng": 85.33308},
    {"lat": 27.66761, "lng": 85.33326},
    {"lat": 27.66801, "lng": 85.33401},
    {"lat": 27.66827, "lng": 85.33448},
    {"lat": 27.66864, "lng": 85.33517},
    {"lat": 27.66873, "lng": 85.33533},
    {"lat": 27.66899, "lng": 85.33583},
    {"lat": 27.66902, "lng": 85.33588},
    {"lat": 27.66919, "lng": 85.33619},
    {"lat": 27.66927, "lng": 85.33634},
    {"lat": 27.66951, "lng": 85.3368},
    {"lat": 27.66963, "lng": 85.33702},
    {"lat": 27.66974, "lng": 85.33723},
    {"lat": 27.66999, "lng": 85.33771},
    {"lat": 27.67025, "lng": 85.3382},
    {"lat": 27.67029, "lng": 85.33828},
    {"lat": 27.67035, "lng": 85.33839},
    {"lat": 27.6706, "lng": 85.33886},
    {"lat": 27.67079, "lng": 85.3392},
    {"lat": 27.67103, "lng": 85.33961},
    {"lat": 27.6712, "lng": 85.33986},
    {"lat": 27.67155, "lng": 85.34034},
    {"lat": 27.67177, "lng": 85.34059},
    {"lat": 27.67216, "lng": 85.34098},
    {"lat": 27.67248, "lng": 85.34128},
    {"lat": 27.67267, "lng": 85.34146},
    {"lat": 27.67269, "lng": 85.34148},
    {"lat": 27.67345, "lng": 85.34227},
    {"lat": 27.67355, "lng": 85.34236},
    {"lat": 27.67366, "lng": 85.34246},
    {"lat": 27.67376, "lng": 85.34255},
    {"lat": 27.67394, "lng": 85.34272},
    {"lat": 27.6741, "lng": 85.34288},
    {"lat": 27.67427, "lng": 85.34304},
    {"lat": 27.67457, "lng": 85.34334},
    {"lat": 27.67474, "lng": 85.34352},
    {"lat": 27.67493, "lng": 85.34373},
    {"lat": 27.67512, "lng": 85.34394},
    {"lat": 27.6753, "lng": 85.34416},
    {"lat": 27.67546, "lng": 85.34437},
    {"lat": 27.67561, "lng": 85.3446},
    {"lat": 27.67578, "lng": 85.34485},
    {"lat": 27.67629, "lng": 85.34565},
    {"lat": 27.67686, "lng": 85.34651},
    {"lat": 27.67693, "lng": 85.34661},
    {"lat": 27.67738, "lng": 85.34731},
    {"lat": 27.67796, "lng": 85.34819},
    {"lat": 27.67837, "lng": 85.34873},
    {"lat": 27.67846, "lng": 85.34889},
    {"lat": 27.67872, "lng": 85.34934},
    {"lat": 27.67871, "lng": 85.34949},
    {"lat": 27.67871, "lng": 85.34953},
    {"lat": 27.67871, "lng": 85.34953},
    {"lat": 27.67882, "lng": 85.34953},
    {"lat": 27.67894, "lng": 85.34953},
    {"lat": 27.67922, "lng": 85.34952},
    {"lat": 27.67922, "lng": 85.34952}
  ];

  var kalankiToKoteshwor2 = [
    {"lat": 27.67882, "lng": 85.34952},
    {"lat": 27.67872, "lng": 85.34934},
    {"lat": 27.67872, "lng": 85.34934},
    {"lat": 27.67871, "lng": 85.34949},
    {"lat": 27.67871, "lng": 85.34953},
    {"lat": 27.67882, "lng": 85.34953},
    {"lat": 27.67894, "lng": 85.34953},
    {"lat": 27.68047, "lng": 85.3495},
    {"lat": 27.68166, "lng": 85.34946},
    {"lat": 27.68263, "lng": 85.34934},
    {"lat": 27.68263, "lng": 85.34934},
    {"lat": 27.6828, "lng": 85.34934},
    {"lat": 27.68317, "lng": 85.34924},
    {"lat": 27.68363, "lng": 85.34903},
    {"lat": 27.684, "lng": 85.34881},
    {"lat": 27.68432, "lng": 85.34851},
    {"lat": 27.68463, "lng": 85.34829},
    {"lat": 27.68489, "lng": 85.348},
    {"lat": 27.68519, "lng": 85.34763},
    {"lat": 27.6854, "lng": 85.34729},
    {"lat": 27.68553, "lng": 85.34705},
    {"lat": 27.68559, "lng": 85.34692},
    {"lat": 27.68576, "lng": 85.34658},
    {"lat": 27.68593, "lng": 85.34598},
    {"lat": 27.68601, "lng": 85.34565},
    {"lat": 27.68606, "lng": 85.34532},
    {"lat": 27.68622, "lng": 85.34467},
    {"lat": 27.68629, "lng": 85.34434},
    {"lat": 27.68654, "lng": 85.34328},
    {"lat": 27.68656, "lng": 85.34313},
    {"lat": 27.68667, "lng": 85.34256},
    {"lat": 27.68675, "lng": 85.34219},
    {"lat": 27.68688, "lng": 85.34159},
    {"lat": 27.68706, "lng": 85.34079},
    {"lat": 27.68714, "lng": 85.34047},
    {"lat": 27.68716, "lng": 85.34035},
    {"lat": 27.6874, "lng": 85.33936},
    {"lat": 27.68753, "lng": 85.33898},
    {"lat": 27.68765, "lng": 85.33854},
    {"lat": 27.68769, "lng": 85.33837},
    {"lat": 27.68778, "lng": 85.33796},
    {"lat": 27.68788, "lng": 85.33752},
    {"lat": 27.68796, "lng": 85.33717},
    {"lat": 27.68802, "lng": 85.33692},
    {"lat": 27.6881, "lng": 85.33655},
    {"lat": 27.68822, "lng": 85.33604},
    {"lat": 27.68832, "lng": 85.33554},
    {"lat": 27.68832, "lng": 85.33554},
    {"lat": 27.68824, "lng": 85.33552},
    {"lat": 27.68824, "lng": 85.33552},
    {"lat": 27.68851, "lng": 85.33434},
    {"lat": 27.68862, "lng": 85.33383},
    {"lat": 27.68879, "lng": 85.33313},
    {"lat": 27.68894, "lng": 85.33239},
    {"lat": 27.68906, "lng": 85.33186},
    {"lat": 27.68912, "lng": 85.33156},
    {"lat": 27.68917, "lng": 85.33137},
    {"lat": 27.68922, "lng": 85.33114},
    {"lat": 27.68928, "lng": 85.33093},
    {"lat": 27.68933, "lng": 85.33079},
    {"lat": 27.6894, "lng": 85.33056},
    {"lat": 27.68957, "lng": 85.33002},
    {"lat": 27.68981, "lng": 85.32947},
    {"lat": 27.68998, "lng": 85.32908},
    {"lat": 27.69005, "lng": 85.32891},
    {"lat": 27.6902, "lng": 85.32857},
    {"lat": 27.69028, "lng": 85.32829},
    {"lat": 27.69039, "lng": 85.32807},
    {"lat": 27.69044, "lng": 85.32798},
    {"lat": 27.69049, "lng": 85.3279},
    {"lat": 27.69049, "lng": 85.3279},
    {"lat": 27.69063, "lng": 85.32768},
    {"lat": 27.69081, "lng": 85.32736},
    {"lat": 27.69115, "lng": 85.32661},
    {"lat": 27.69132, "lng": 85.32626},
    {"lat": 27.6917, "lng": 85.32549},
    {"lat": 27.69175, "lng": 85.32539},
    {"lat": 27.69223, "lng": 85.32441},
    {"lat": 27.69247, "lng": 85.32388},
    {"lat": 27.69259, "lng": 85.32369},
    {"lat": 27.69281, "lng": 85.32319},
    {"lat": 27.69303, "lng": 85.32272},
    {"lat": 27.69317, "lng": 85.32247},
    {"lat": 27.6934, "lng": 85.322},
    {"lat": 27.69354, "lng": 85.32169},
    {"lat": 27.69369, "lng": 85.32138},
    {"lat": 27.69384, "lng": 85.32108},
    {"lat": 27.6939, "lng": 85.32095},
    {"lat": 27.69391, "lng": 85.32091},
    {"lat": 27.69397, "lng": 85.32085},
    {"lat": 27.69402, "lng": 85.32084},
    {"lat": 27.69402, "lng": 85.32084},
    {"lat": 27.69433, "lng": 85.32024},
    {"lat": 27.69433, "lng": 85.32024},
    {"lat": 27.69445, "lng": 85.32005},
    {"lat": 27.69451, "lng": 85.31987},
    {"lat": 27.69449, "lng": 85.3198},
    {"lat": 27.69446, "lng": 85.31976},
    {"lat": 27.69443, "lng": 85.31972},
    {"lat": 27.6944, "lng": 85.31969},
    {"lat": 27.69437, "lng": 85.31964},
    {"lat": 27.6943, "lng": 85.31956},
    {"lat": 27.69424, "lng": 85.31949},
    {"lat": 27.69412, "lng": 85.31938},
    {"lat": 27.69406, "lng": 85.31929},
    {"lat": 27.6938, "lng": 85.31909},
    {"lat": 27.69341, "lng": 85.31884},
    {"lat": 27.69337, "lng": 85.3188},
    {"lat": 27.69314, "lng": 85.31867},
    {"lat": 27.69223, "lng": 85.31824},
    {"lat": 27.69217, "lng": 85.31822},
    {"lat": 27.69185, "lng": 85.31806},
    {"lat": 27.69155, "lng": 85.3179},
    {"lat": 27.69108, "lng": 85.31768},
    {"lat": 27.69083, "lng": 85.31764},
    {"lat": 27.69071, "lng": 85.31762},
    {"lat": 27.69071, "lng": 85.31762},
    {"lat": 27.69072, "lng": 85.31755},
    {"lat": 27.69072, "lng": 85.31722},
    {"lat": 27.69075, "lng": 85.3171},
    {"lat": 27.6908, "lng": 85.31702},
    {"lat": 27.69089, "lng": 85.31691},
    {"lat": 27.69126, "lng": 85.31656},
    {"lat": 27.69168, "lng": 85.31616},
    {"lat": 27.69178, "lng": 85.31605},
    {"lat": 27.69188, "lng": 85.31594},
    {"lat": 27.6924, "lng": 85.31543},
    {"lat": 27.69283, "lng": 85.315},
    {"lat": 27.69291, "lng": 85.31493},
    {"lat": 27.6931, "lng": 85.3147},
    {"lat": 27.69352, "lng": 85.31428},
    {"lat": 27.69356, "lng": 85.31423},
    {"lat": 27.69356, "lng": 85.31423},
    {"lat": 27.69356, "lng": 85.31423},
    {"lat": 27.6936, "lng": 85.31417},
    {"lat": 27.69366, "lng": 85.31407},
    {"lat": 27.69366, "lng": 85.31407},
    {"lat": 27.69372, "lng": 85.31398},
    {"lat": 27.69372, "lng": 85.31398},
    {"lat": 27.69376, "lng": 85.31392},
    {"lat": 27.69379, "lng": 85.31385},
    {"lat": 27.69383, "lng": 85.31375},
    {"lat": 27.69385, "lng": 85.31367},
    {"lat": 27.6939, "lng": 85.31335},
    {"lat": 27.69398, "lng": 85.31298},
    {"lat": 27.69406, "lng": 85.3127},
    {"lat": 27.69414, "lng": 85.31241},
    {"lat": 27.69421, "lng": 85.31224},
    {"lat": 27.69435, "lng": 85.31188},
    {"lat": 27.69452, "lng": 85.31141},
    {"lat": 27.69468, "lng": 85.31098},
    {"lat": 27.69469, "lng": 85.31094},
    {"lat": 27.69477, "lng": 85.31076},
    {"lat": 27.69506, "lng": 85.31002},
    {"lat": 27.69525, "lng": 85.30955},
    {"lat": 27.69548, "lng": 85.30901},
    {"lat": 27.69582, "lng": 85.30823},
    {"lat": 27.69588, "lng": 85.30821},
    {"lat": 27.69606, "lng": 85.30772},
    {"lat": 27.69624, "lng": 85.307},
    {"lat": 27.69635, "lng": 85.30661},
    {"lat": 27.69657, "lng": 85.30585},
    {"lat": 27.69663, "lng": 85.3057},
    {"lat": 27.69663, "lng": 85.3057},
    {"lat": 27.69671, "lng": 85.30553},
    {"lat": 27.69682, "lng": 85.30533},
    {"lat": 27.69707, "lng": 85.30483},
    {"lat": 27.69725, "lng": 85.30458},
    {"lat": 27.69771, "lng": 85.30371},
    {"lat": 27.69778, "lng": 85.30354},
    {"lat": 27.69784, "lng": 85.30338},
    {"lat": 27.69796, "lng": 85.30281},
    {"lat": 27.69803, "lng": 85.30255},
    {"lat": 27.69818, "lng": 85.30184},
    {"lat": 27.69822, "lng": 85.30166},
    {"lat": 27.69847, "lng": 85.30054},
    {"lat": 27.69848, "lng": 85.30049},
    {"lat": 27.69852, "lng": 85.30032},
    {"lat": 27.69854, "lng": 85.30021},
    {"lat": 27.69855, "lng": 85.30011},
    {"lat": 27.69854, "lng": 85.30003},
    {"lat": 27.69852, "lng": 85.29991},
    {"lat": 27.69846, "lng": 85.29961},
    {"lat": 27.69846, "lng": 85.29961},
    {"lat": 27.69836, "lng": 85.29955},
    {"lat": 27.69808, "lng": 85.29937},
    {"lat": 27.69808, "lng": 85.29937},
    {"lat": 27.69826, "lng": 85.29933},
    {"lat": 27.69833, "lng": 85.29931},
    {"lat": 27.69833, "lng": 85.29931},
    {"lat": 27.69833, "lng": 85.29931},
    {"lat": 27.69838, "lng": 85.2993},
    {"lat": 27.69838, "lng": 85.2993},
    {"lat": 27.69816, "lng": 85.29845},
    {"lat": 27.69813, "lng": 85.29838},
    {"lat": 27.69801, "lng": 85.29828},
    {"lat": 27.69795, "lng": 85.29807},
    {"lat": 27.6979, "lng": 85.29786},
    {"lat": 27.69789, "lng": 85.29781},
    {"lat": 27.69792, "lng": 85.2977},
    {"lat": 27.6979, "lng": 85.29764},
    {"lat": 27.69787, "lng": 85.29755},
    {"lat": 27.6978, "lng": 85.29733},
    {"lat": 27.69775, "lng": 85.29718},
    {"lat": 27.69758, "lng": 85.29661},
    {"lat": 27.6975, "lng": 85.29632},
    {"lat": 27.69734, "lng": 85.29597},
    {"lat": 27.69692, "lng": 85.29442},
    {"lat": 27.69682, "lng": 85.29406},
    {"lat": 27.69682, "lng": 85.29406},
    {"lat": 27.69659, "lng": 85.29355},
    {"lat": 27.69636, "lng": 85.29334},
    {"lat": 27.69617, "lng": 85.29323},
    {"lat": 27.69617, "lng": 85.29323},
    {"lat": 27.69578, "lng": 85.29301},
    {"lat": 27.69569, "lng": 85.29293},
    {"lat": 27.69563, "lng": 85.29286},
    {"lat": 27.69557, "lng": 85.29276},
    {"lat": 27.69553, "lng": 85.29261},
    {"lat": 27.69548, "lng": 85.29249},
    {"lat": 27.69546, "lng": 85.29231},
    {"lat": 27.69545, "lng": 85.29217},
    {"lat": 27.69546, "lng": 85.29196},
    {"lat": 27.69549, "lng": 85.29173},
    {"lat": 27.69555, "lng": 85.29146},
    {"lat": 27.69563, "lng": 85.29099},
    {"lat": 27.69565, "lng": 85.29088},
    {"lat": 27.69564, "lng": 85.29072},
    {"lat": 27.69559, "lng": 85.29053},
    {"lat": 27.69552, "lng": 85.2903},
    {"lat": 27.69545, "lng": 85.29011},
    {"lat": 27.69542, "lng": 85.28996},
    {"lat": 27.69537, "lng": 85.28936},
    {"lat": 27.69535, "lng": 85.28915},
    {"lat": 27.69534, "lng": 85.28904},
    {"lat": 27.69532, "lng": 85.28898},
    {"lat": 27.69532, "lng": 85.28898},
    {"lat": 27.69532, "lng": 85.28898},
    {"lat": 27.69529, "lng": 85.28888},
    {"lat": 27.69516, "lng": 85.2884},
    {"lat": 27.69497, "lng": 85.28775},
    {"lat": 27.69488, "lng": 85.2874},
    {"lat": 27.69483, "lng": 85.28723},
    {"lat": 27.69474, "lng": 85.2869},
    {"lat": 27.69465, "lng": 85.28657},
    {"lat": 27.6944, "lng": 85.28561},
    {"lat": 27.6944, "lng": 85.28561},
    {"lat": 27.69431, "lng": 85.28535},
    {"lat": 27.69424, "lng": 85.28507},
    {"lat": 27.69396, "lng": 85.28424},
    {"lat": 27.69379, "lng": 85.28372},
    {"lat": 27.69365, "lng": 85.28327},
    {"lat": 27.69355, "lng": 85.28278},
    {"lat": 27.69337, "lng": 85.28184},
    {"lat": 27.69335, "lng": 85.28174},
    {"lat": 27.69335, "lng": 85.28174}
  ];

//for path polyline

//polyline from kalanki to koteshwar
  var kalankiToKoteshworPath = <LatLng>[
    LatLng(27.69333, 85.28165),
    LatLng(27.69334, 85.28169),
    LatLng(27.69334, 85.28169),
    LatLng(27.69311, 85.28174),
    LatLng(27.69283, 85.28182),
    LatLng(27.69265, 85.2819),
    LatLng(27.69253, 85.28195),
    LatLng(27.6923, 85.2821),
    LatLng(27.69194, 85.28235),
    LatLng(27.69122, 85.28284),
    LatLng(27.69015, 85.28355),
    LatLng(27.69005, 85.28363),
    LatLng(27.68997, 85.2837),
    LatLng(27.68959, 85.28399),
    LatLng(27.68945, 85.28409),
    LatLng(27.68927, 85.28424),
    LatLng(27.68917, 85.28433),
    LatLng(27.68908, 85.28442),
    LatLng(27.68893, 85.28461),
    LatLng(27.68877, 85.28488),
    LatLng(27.68866, 85.28516),
    LatLng(27.68857, 85.28547),
    LatLng(27.68852, 85.28579),
    LatLng(27.68848, 85.28611),
    LatLng(27.68844, 85.28635),
    LatLng(27.68838, 85.28674),
    LatLng(27.68831, 85.28726),
    LatLng(27.68816, 85.28824),
    LatLng(27.68805, 85.28881),
    LatLng(27.68799, 85.28923),
    LatLng(27.68795, 85.28953),
    LatLng(27.68792, 85.28971),
    LatLng(27.68787, 85.28989),
    LatLng(27.68782, 85.29004),
    LatLng(27.68777, 85.29018),
    LatLng(27.68767, 85.29039),
    LatLng(27.68759, 85.29055),
    LatLng(27.6875, 85.2907),
    LatLng(27.68725, 85.291),
    LatLng(27.6864, 85.29216),
    LatLng(27.68619, 85.29243),
    LatLng(27.68595, 85.29275),
    LatLng(27.68586, 85.29287),
    LatLng(27.68579, 85.29298),
    LatLng(27.68569, 85.29312),
    LatLng(27.68565, 85.2932),
    LatLng(27.68558, 85.29332),
    LatLng(27.68551, 85.29348),
    LatLng(27.68547, 85.29358),
    LatLng(27.68546, 85.2936),
    LatLng(27.68542, 85.2937),
    LatLng(27.68539, 85.29382),
    LatLng(27.68534, 85.29398),
    LatLng(27.68531, 85.29413),
    LatLng(27.68528, 85.29431),
    LatLng(27.68521, 85.29484),
    LatLng(27.68512, 85.2955),
    LatLng(27.68503, 85.29632),
    LatLng(27.68491, 85.29732),
    LatLng(27.68488, 85.29752),
    LatLng(27.68483, 85.29798),
    LatLng(27.68481, 85.29825),
    LatLng(27.68479, 85.29854),
    LatLng(27.68477, 85.29872),
    LatLng(27.68474, 85.2989),
    LatLng(27.68459, 85.30021),
    LatLng(27.68457, 85.30033),
    LatLng(27.68451, 85.30068),
    LatLng(27.68446, 85.30117),
    LatLng(27.68444, 85.30135),
    LatLng(27.68441, 85.3015),
    LatLng(27.68438, 85.30161),
    LatLng(27.68431, 85.30178),
    LatLng(27.68424, 85.30188),
    LatLng(27.68418, 85.30198),
    LatLng(27.68412, 85.30206),
    LatLng(27.68404, 85.30211),
    LatLng(27.68396, 85.30218),
    LatLng(27.68387, 85.30223),
    LatLng(27.6838, 85.30227),
    LatLng(27.68371, 85.30231),
    LatLng(27.68362, 85.30235),
    LatLng(27.6835, 85.30238),
    LatLng(27.68341, 85.30239),
    LatLng(27.68331, 85.3024),
    LatLng(27.68312, 85.3024),
    LatLng(27.68236, 85.30237),
    LatLng(27.68171, 85.30233),
    LatLng(27.68098, 85.30228),
    LatLng(27.68042, 85.30224),
    LatLng(27.67984, 85.30222),
    LatLng(27.67845, 85.30218),
    LatLng(27.67828, 85.30217),
    LatLng(27.67779, 85.30215),
    LatLng(27.67679, 85.30208),
    LatLng(27.67633, 85.30206),
    LatLng(27.67627, 85.30206),
    LatLng(27.67567, 85.30205),
    LatLng(27.67521, 85.30208),
    LatLng(27.67476, 85.30214),
    LatLng(27.67447, 85.30223),
    LatLng(27.67395, 85.30245),
    LatLng(27.67384, 85.30249),
    LatLng(27.67366, 85.3026),
    LatLng(27.6735, 85.30271),
    LatLng(27.67259, 85.30342),
    LatLng(27.67217, 85.30376),
    LatLng(27.67139, 85.30434),
    LatLng(27.67086, 85.30474),
    LatLng(27.6702, 85.30523),
    LatLng(27.67002, 85.30538),
    LatLng(27.66944, 85.30585),
    LatLng(27.66885, 85.30631),
    LatLng(27.66855, 85.30655),
    LatLng(27.66821, 85.30684),
    LatLng(27.66814, 85.3069),
    LatLng(27.66773, 85.30721),
    LatLng(27.66726, 85.30758),
    LatLng(27.66712, 85.30769),
    LatLng(27.66702, 85.30782),
    LatLng(27.66686, 85.30803),
    LatLng(27.66676, 85.30819),
    LatLng(27.66671, 85.30828),
    LatLng(27.66667, 85.30836),
    LatLng(27.66658, 85.30865),
    LatLng(27.6664, 85.3092),
    LatLng(27.66597, 85.31065),
    LatLng(27.66582, 85.3112),
    LatLng(27.66544, 85.31247),
    LatLng(27.66528, 85.31304),
    LatLng(27.66517, 85.31335),
    LatLng(27.66506, 85.31356),
    LatLng(27.66498, 85.31371),
    LatLng(27.6649, 85.31384),
    LatLng(27.6648, 85.31398),
    LatLng(27.66469, 85.31413),
    LatLng(27.66453, 85.31432),
    LatLng(27.66433, 85.31458),
    LatLng(27.6634, 85.31573),
    LatLng(27.66285, 85.3164),
    LatLng(27.66276, 85.31652),
    LatLng(27.66249, 85.31685),
    LatLng(27.6623, 85.31709),
    LatLng(27.66139, 85.31825),
    LatLng(27.66089, 85.31884),
    LatLng(27.66061, 85.31919),
    LatLng(27.66033, 85.31958),
    LatLng(27.66022, 85.31971),
    LatLng(27.65963, 85.32039),
    LatLng(27.6593, 85.32079),
    LatLng(27.65911, 85.32103),
    LatLng(27.65907, 85.32109),
    LatLng(27.65888, 85.32133),
    LatLng(27.65858, 85.32171),
    LatLng(27.65819, 85.32217),
    LatLng(27.65814, 85.32224),
    LatLng(27.65805, 85.32238),
    LatLng(27.65801, 85.32246),
    LatLng(27.65797, 85.32254),
    LatLng(27.65793, 85.32263),
    LatLng(27.6579, 85.32272),
    LatLng(27.65789, 85.32284),
    LatLng(27.65789, 85.32294),
    LatLng(27.65789, 85.32303),
    LatLng(27.65791, 85.32313),
    LatLng(27.65792, 85.32321),
    LatLng(27.65794, 85.3233),
    LatLng(27.65797, 85.32337),
    LatLng(27.658, 85.32345),
    LatLng(27.65812, 85.32368),
    LatLng(27.65825, 85.32392),
    LatLng(27.65839, 85.32415),
    LatLng(27.65851, 85.32437),
    LatLng(27.65875, 85.32475),
    LatLng(27.65895, 85.32512),
    LatLng(27.65929, 85.32573),
    LatLng(27.65957, 85.32613),
    LatLng(27.65982, 85.32645),
    LatLng(27.66003, 85.32667),
    LatLng(27.66064, 85.32725),
    LatLng(27.662, 85.32834),
    LatLng(27.66268, 85.32891),
    LatLng(27.66414, 85.3301),
    LatLng(27.66429, 85.33023),
    LatLng(27.66494, 85.33075),
    LatLng(27.6654, 85.33114),
    LatLng(27.66574, 85.33142),
    LatLng(27.66597, 85.33162),
    LatLng(27.66632, 85.33192),
    LatLng(27.66646, 85.33203),
    LatLng(27.66665, 85.33219),
    LatLng(27.66683, 85.33233),
    LatLng(27.66694, 85.33244),
    LatLng(27.66703, 85.33253),
    LatLng(27.66712, 85.33263),
    LatLng(27.6673, 85.33283),
    LatLng(27.66738, 85.33294),
    LatLng(27.66748, 85.33308),
    LatLng(27.66761, 85.33326),
    LatLng(27.66801, 85.33401),
    LatLng(27.66827, 85.33448),
    LatLng(27.66864, 85.33517),
    LatLng(27.66873, 85.33533),
    LatLng(27.66899, 85.33583),
    LatLng(27.66902, 85.33588),
    LatLng(27.66919, 85.33619),
    LatLng(27.66927, 85.33634),
    LatLng(27.66951, 85.3368),
    LatLng(27.66963, 85.33702),
    LatLng(27.66974, 85.33723),
    LatLng(27.66999, 85.33771),
    LatLng(27.67025, 85.3382),
    LatLng(27.67029, 85.33828),
    LatLng(27.67035, 85.33839),
    LatLng(27.6706, 85.33886),
    LatLng(27.67079, 85.3392),
    LatLng(27.67103, 85.33961),
    LatLng(27.6712, 85.33986),
    LatLng(27.67155, 85.34034),
    LatLng(27.67177, 85.34059),
    LatLng(27.67216, 85.34098),
    LatLng(27.67248, 85.34128),
    LatLng(27.67267, 85.34146),
    LatLng(27.67269, 85.34148),
    LatLng(27.67345, 85.34227),
    LatLng(27.67355, 85.34236),
    LatLng(27.67366, 85.34246),
    LatLng(27.67376, 85.34255),
    LatLng(27.67394, 85.34272),
    LatLng(27.6741, 85.34288),
    LatLng(27.67427, 85.34304),
    LatLng(27.67457, 85.34334),
    LatLng(27.67474, 85.34352),
    LatLng(27.67493, 85.34373),
    LatLng(27.67512, 85.34394),
    LatLng(27.6753, 85.34416),
    LatLng(27.67546, 85.34437),
    LatLng(27.67561, 85.3446),
    LatLng(27.67578, 85.34485),
    LatLng(27.67629, 85.34565),
    LatLng(27.67686, 85.34651),
    LatLng(27.67693, 85.34661),
    LatLng(27.67738, 85.34731),
    LatLng(27.67796, 85.34819),
    LatLng(27.67837, 85.34873),
    LatLng(27.67846, 85.34889),
    LatLng(27.67872, 85.34934),
    LatLng(27.67871, 85.34949),
    LatLng(27.67871, 85.34953),
    LatLng(27.67871, 85.34953),
    LatLng(27.67882, 85.34953),
    LatLng(27.67894, 85.34953),
    LatLng(27.67922, 85.34952),
    LatLng(27.67922, 85.34952)
  ];

//alternate polyline from kalanki to koteshwar2
  var kalankiToKoteshworPath2 = <LatLng>[
    LatLng(27.67882, 85.34952),
    LatLng(27.67872, 85.34934),
    LatLng(27.67872, 85.34934),
    LatLng(27.67871, 85.34949),
    LatLng(27.67871, 85.34953),
    LatLng(27.67882, 85.34953),
    LatLng(27.67894, 85.34953),
    LatLng(27.68047, 85.3495),
    LatLng(27.68166, 85.34946),
    LatLng(27.68263, 85.34934),
    LatLng(27.68263, 85.34934),
    LatLng(27.6828, 85.34934),
    LatLng(27.68317, 85.34924),
    LatLng(27.68363, 85.34903),
    LatLng(27.684, 85.34881),
    LatLng(27.68432, 85.34851),
    LatLng(27.68463, 85.34829),
    LatLng(27.68489, 85.348),
    LatLng(27.68519, 85.34763),
    LatLng(27.6854, 85.34729),
    LatLng(27.68553, 85.34705),
    LatLng(27.68559, 85.34692),
    LatLng(27.68576, 85.34658),
    LatLng(27.68593, 85.34598),
    LatLng(27.68601, 85.34565),
    LatLng(27.68606, 85.34532),
    LatLng(27.68622, 85.34467),
    LatLng(27.68629, 85.34434),
    LatLng(27.68654, 85.34328),
    LatLng(27.68656, 85.34313),
    LatLng(27.68667, 85.34256),
    LatLng(27.68675, 85.34219),
    LatLng(27.68688, 85.34159),
    LatLng(27.68706, 85.34079),
    LatLng(27.68714, 85.34047),
    LatLng(27.68716, 85.34035),
    LatLng(27.6874, 85.33936),
    LatLng(27.68753, 85.33898),
    LatLng(27.68765, 85.33854),
    LatLng(27.68769, 85.33837),
    LatLng(27.68778, 85.33796),
    LatLng(27.68788, 85.33752),
    LatLng(27.68796, 85.33717),
    LatLng(27.68802, 85.33692),
    LatLng(27.6881, 85.33655),
    LatLng(27.68822, 85.33604),
    LatLng(27.68832, 85.33554),
    LatLng(27.68832, 85.33554),
    LatLng(27.68824, 85.33552),
    LatLng(27.68824, 85.33552),
    LatLng(27.68851, 85.33434),
    LatLng(27.68862, 85.33383),
    LatLng(27.68879, 85.33313),
    LatLng(27.68894, 85.33239),
    LatLng(27.68906, 85.33186),
    LatLng(27.68912, 85.33156),
    LatLng(27.68917, 85.33137),
    LatLng(27.68922, 85.33114),
    LatLng(27.68928, 85.33093),
    LatLng(27.68933, 85.33079),
    LatLng(27.6894, 85.33056),
    LatLng(27.68957, 85.33002),
    LatLng(27.68981, 85.32947),
    LatLng(27.68998, 85.32908),
    LatLng(27.69005, 85.32891),
    LatLng(27.6902, 85.32857),
    LatLng(27.69028, 85.32829),
    LatLng(27.69039, 85.32807),
    LatLng(27.69044, 85.32798),
    LatLng(27.69049, 85.3279),
    LatLng(27.69049, 85.3279),
    LatLng(27.69063, 85.32768),
    LatLng(27.69081, 85.32736),
    LatLng(27.69115, 85.32661),
    LatLng(27.69132, 85.32626),
    LatLng(27.6917, 85.32549),
    LatLng(27.69175, 85.32539),
    LatLng(27.69223, 85.32441),
    LatLng(27.69247, 85.32388),
    LatLng(27.69259, 85.32369),
    LatLng(27.69281, 85.32319),
    LatLng(27.69303, 85.32272),
    LatLng(27.69317, 85.32247),
    LatLng(27.6934, 85.322),
    LatLng(27.69354, 85.32169),
    LatLng(27.69369, 85.32138),
    LatLng(27.69384, 85.32108),
    LatLng(27.6939, 85.32095),
    LatLng(27.69391, 85.32091),
    LatLng(27.69397, 85.32085),
    LatLng(27.69402, 85.32084),
    LatLng(27.69402, 85.32084),
    LatLng(27.69433, 85.32024),
    LatLng(27.69433, 85.32024),
    LatLng(27.69445, 85.32005),
    LatLng(27.69451, 85.31987),
    LatLng(27.69449, 85.3198),
    LatLng(27.69446, 85.31976),
    LatLng(27.69443, 85.31972),
    LatLng(27.6944, 85.31969),
    LatLng(27.69437, 85.31964),
    LatLng(27.6943, 85.31956),
    LatLng(27.69424, 85.31949),
    LatLng(27.69412, 85.31938),
    LatLng(27.69406, 85.31929),
    LatLng(27.6938, 85.31909),
    LatLng(27.69341, 85.31884),
    LatLng(27.69337, 85.3188),
    LatLng(27.69314, 85.31867),
    LatLng(27.69223, 85.31824),
    LatLng(27.69217, 85.31822),
    LatLng(27.69185, 85.31806),
    LatLng(27.69155, 85.3179),
    LatLng(27.69108, 85.31768),
    LatLng(27.69083, 85.31764),
    LatLng(27.69071, 85.31762),
    LatLng(27.69071, 85.31762),
    LatLng(27.69072, 85.31755),
    LatLng(27.69072, 85.31722),
    LatLng(27.69075, 85.3171),
    LatLng(27.6908, 85.31702),
    LatLng(27.69089, 85.31691),
    LatLng(27.69126, 85.31656),
    LatLng(27.69168, 85.31616),
    LatLng(27.69178, 85.31605),
    LatLng(27.69188, 85.31594),
    LatLng(27.6924, 85.31543),
    LatLng(27.69283, 85.315),
    LatLng(27.69291, 85.31493),
    LatLng(27.6931, 85.3147),
    LatLng(27.69352, 85.31428),
    LatLng(27.69356, 85.31423),
    LatLng(27.69356, 85.31423),
    LatLng(27.69356, 85.31423),
    LatLng(27.6936, 85.31417),
    LatLng(27.69366, 85.31407),
    LatLng(27.69366, 85.31407),
    LatLng(27.69372, 85.31398),
    LatLng(27.69372, 85.31398),
    LatLng(27.69376, 85.31392),
    LatLng(27.69379, 85.31385),
    LatLng(27.69383, 85.31375),
    LatLng(27.69385, 85.31367),
    LatLng(27.6939, 85.31335),
    LatLng(27.69398, 85.31298),
    LatLng(27.69406, 85.3127),
    LatLng(27.69414, 85.31241),
    LatLng(27.69421, 85.31224),
    LatLng(27.69435, 85.31188),
    LatLng(27.69452, 85.31141),
    LatLng(27.69468, 85.31098),
    LatLng(27.69469, 85.31094),
    LatLng(27.69477, 85.31076),
    LatLng(27.69506, 85.31002),
    LatLng(27.69525, 85.30955),
    LatLng(27.69548, 85.30901),
    LatLng(27.69582, 85.30823),
    LatLng(27.69588, 85.30821),
    LatLng(27.69606, 85.30772),
    LatLng(27.69624, 85.307),
    LatLng(27.69635, 85.30661),
    LatLng(27.69657, 85.30585),
    LatLng(27.69663, 85.3057),
    LatLng(27.69663, 85.3057),
    LatLng(27.69671, 85.30553),
    LatLng(27.69682, 85.30533),
    LatLng(27.69707, 85.30483),
    LatLng(27.69725, 85.30458),
    LatLng(27.69771, 85.30371),
    LatLng(27.69778, 85.30354),
    LatLng(27.69784, 85.30338),
    LatLng(27.69796, 85.30281),
    LatLng(27.69803, 85.30255),
    LatLng(27.69818, 85.30184),
    LatLng(27.69822, 85.30166),
    LatLng(27.69847, 85.30054),
    LatLng(27.69848, 85.30049),
    LatLng(27.69852, 85.30032),
    LatLng(27.69854, 85.30021),
    LatLng(27.69855, 85.30011),
    LatLng(27.69854, 85.30003),
    LatLng(27.69852, 85.29991),
    LatLng(27.69846, 85.29961),
    LatLng(27.69846, 85.29961),
    LatLng(27.69836, 85.29955),
    LatLng(27.69808, 85.29937),
    LatLng(27.69808, 85.29937),
    LatLng(27.69826, 85.29933),
    LatLng(27.69833, 85.29931),
    LatLng(27.69833, 85.29931),
    LatLng(27.69833, 85.29931),
    LatLng(27.69838, 85.2993),
    LatLng(27.69838, 85.2993),
    LatLng(27.69816, 85.29845),
    LatLng(27.69813, 85.29838),
    LatLng(27.69801, 85.29828),
    LatLng(27.69795, 85.29807),
    LatLng(27.6979, 85.29786),
    LatLng(27.69789, 85.29781),
    LatLng(27.69792, 85.2977),
    LatLng(27.6979, 85.29764),
    LatLng(27.69787, 85.29755),
    LatLng(27.6978, 85.29733),
    LatLng(27.69775, 85.29718),
    LatLng(27.69758, 85.29661),
    LatLng(27.6975, 85.29632),
    LatLng(27.69734, 85.29597),
    LatLng(27.69692, 85.29442),
    LatLng(27.69682, 85.29406),
    LatLng(27.69682, 85.29406),
    LatLng(27.69659, 85.29355),
    LatLng(27.69636, 85.29334),
    LatLng(27.69617, 85.29323),
    LatLng(27.69617, 85.29323),
    LatLng(27.69578, 85.29301),
    LatLng(27.69569, 85.29293),
    LatLng(27.69563, 85.29286),
    LatLng(27.69557, 85.29276),
    LatLng(27.69553, 85.29261),
    LatLng(27.69548, 85.29249),
    LatLng(27.69546, 85.29231),
    LatLng(27.69545, 85.29217),
    LatLng(27.69546, 85.29196),
    LatLng(27.69549, 85.29173),
    LatLng(27.69555, 85.29146),
    LatLng(27.69563, 85.29099),
    LatLng(27.69565, 85.29088),
    LatLng(27.69564, 85.29072),
    LatLng(27.69559, 85.29053),
    LatLng(27.69552, 85.2903),
    LatLng(27.69545, 85.29011),
    LatLng(27.69542, 85.28996),
    LatLng(27.69537, 85.28936),
    LatLng(27.69535, 85.28915),
    LatLng(27.69534, 85.28904),
    LatLng(27.69532, 85.28898),
    LatLng(27.69532, 85.28898),
    LatLng(27.69532, 85.28898),
    LatLng(27.69529, 85.28888),
    LatLng(27.69516, 85.2884),
    LatLng(27.69497, 85.28775),
    LatLng(27.69488, 85.2874),
    LatLng(27.69483, 85.28723),
    LatLng(27.69474, 85.2869),
    LatLng(27.69465, 85.28657),
    LatLng(27.6944, 85.28561),
    LatLng(27.6944, 85.28561),
    LatLng(27.69431, 85.28535),
    LatLng(27.69424, 85.28507),
    LatLng(27.69396, 85.28424),
    LatLng(27.69379, 85.28372),
    LatLng(27.69365, 85.28327),
    LatLng(27.69355, 85.28278),
    LatLng(27.69337, 85.28184),
    LatLng(27.69335, 85.28174),
    LatLng(27.69335, 85.28174)
  ];

//distance formula
  double calculateDistance(lat1, lon1, lat2, lon2) {
    var p = 0.017453292519943295;
    var c = cos;
    var a = 0.5 -
        c((lat2 - lat1) * p) / 2 +
        c(lat1 * p) * c(lat2 * p) * (1 - c((lon2 - lon1) * p)) / 2;
    return 12742 * asin(sqrt(a));
  }

  //distance from kalanki to koteshwor
  double distanceFromKalToKot() {
    double totalDistance = 0;
    for (var i = 0; i < kalankiToKoteshwor.length - 1; i++) {
      totalDistance += calculateDistance(
          kalankiToKoteshwor[i]["lat"],
          kalankiToKoteshwor[i]["lng"],
          kalankiToKoteshwor[i + 1]["lat"],
          kalankiToKoteshwor[i + 1]["lng"]);
    }
    return totalDistance * 1000;
  }

//distance from kot to gongabu
  double distanceFromKalToBalkhuToKot() {
    double totalDistance = 0;
    for (var i = 0; i < kalankiToKoteshwor2.length - 1; i++) {
      totalDistance += calculateDistance(
          kalankiToKoteshwor2[i]["lat"],
          kalankiToKoteshwor2[i]["lng"],
          kalankiToKoteshwor2[i + 1]["lat"],
          kalankiToKoteshwor2[i + 1]["lng"]);
    }
    return totalDistance * 1000;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        actions: [
          BackButton(
            onPressed: () {
              Navigator.pop(context);
            },
          ),
        ],
        title: Text("Route"),
      ),
      drawer: MyDrawer(),
      body: Stack(
        children: [
          FlutterMap(
            options: MapOptions(
              plugins: [
                // TappablePolylineMapPlugin(),
              ],
              center: LatLng(27.738037407409745, 85.34015754805284),
              zoom: 12.6,
              maxZoom: 18.0,
            ),
            layers: [
              TileLayerOptions(
                  urlTemplate:
                      "https://api.mapbox.com/styles/v1/manishdahal/ckjfdjp13n3j81at47rwkya4n/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoibWFuaXNoZGFoYWwiLCJhIjoiY2tpYWJkdDB6MGFqbTJzcnRpMmE4OWFlNiJ9.yW5q2POpsb9rkIZetl1omw",
                  additionalOptions: {
                    'accessToken': '$apikey',
                    'id': 'mapbox.mapbox-streets-v8'
                  }),
              PolylineLayerOptions(
                polylines: [
                  Polyline(
                    points: kalankiToKoteshworPath,
                    color: Colors.blue,
                    strokeWidth: 3.0,
                  ),
                  Polyline(
                    points: kalankiToKoteshworPath2,
                    color: Colors.orange,
                    strokeWidth: 5,
                  ),
                ],
              ),
              MarkerLayerOptions(
                markers: [
                  Marker(
                    width: 80.0,
                    height: 80.0,
                    point: kalankiToKoteshworPath[0],
                    builder: (ctx) {
                      return Container(
                        child: IconButton(
                          icon: Icon(FontAwesomeIcons.mapMarkerAlt),
                          color: Colors.red,
                          iconSize: 30.0,
                          onPressed: () {
                            showModalBottomSheet(
                                context: context,
                                builder: (context) {
                                  return Container(
                                      color: Colors.white,
                                      child: Column(
                                        // mainAxisAlignment: MainAxisAlignment.start,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Card(
                                            color: Colors.green,
                                            child: Row(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.center,
                                              mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceBetween,
                                              children: [
                                                Padding(
                                                    padding: EdgeInsets.only(
                                                        left: 30.0)),
                                                Text(
                                                  "Koteshwor",
                                                  style: TextStyle(
                                                      fontSize: 23.0,
                                                      fontWeight:
                                                          FontWeight.bold,
                                                      color: Colors.white),
                                                ),
                                                CircleAvatar(
                                                    backgroundColor:
                                                        Colors.white,
                                                    foregroundColor:
                                                        Colors.green,
                                                    child: Icon(
                                                        FontAwesomeIcons.car))
                                              ],
                                            ),
                                          ),
                                          Divider(),
                                          Center(
                                              child: Text(
                                            "Pass By Vehicles",
                                            style: TextStyle(
                                              fontSize: 22.0,
                                              color: Colors.green,
                                              fontWeight: FontWeight.bold,
                                            ),
                                          )),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '1. Aanapurna Yatayat',
                                              style: TextStyle(
                                                  fontSize: 20.0,
                                                  fontWeight: FontWeight.bold,
                                                  color: Colors.green),
                                            ),
                                          ),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '2. Nepal Yatayat',
                                              style: TextStyle(
                                                fontSize: 20.0,
                                                fontWeight: FontWeight.bold,
                                                color: Colors.green,
                                              ),
                                            ),
                                          ),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '3. Gokarnashwor Yatayat',
                                              style: TextStyle(
                                                fontSize: 20.0,
                                                fontWeight: FontWeight.bold,
                                                color: Colors.green,
                                              ),
                                            ),
                                          ),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '4. Mahanagar Yatayat',
                                              style: TextStyle(
                                                fontSize: 20.0,
                                                fontWeight: FontWeight.bold,
                                                color: Colors.green,
                                              ),
                                            ),
                                          ),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '5. Mayur Yatayat',
                                              style: TextStyle(
                                                fontSize: 20.0,
                                                fontWeight: FontWeight.bold,
                                                color: Colors.green,
                                              ),
                                            ),
                                          ),
                                        ],
                                      ));
                                });
                          },
                        ),
                      );
                    },
                  ),
                  Marker(
                    width: 80.0,
                    height: 80.0,
                    point: kalankiToKoteshworPath[
                        kalankiToKoteshworPath.length - 1],
                    builder: (ctx) {
                      return Container(
                        child: IconButton(
                          icon: Icon(FontAwesomeIcons.mapMarkerAlt),
                          color: Colors.red,
                          iconSize: 30.0,
                          onPressed: () {
                            showModalBottomSheet(
                                context: context,
                                builder: (context) {
                                  return Container(
                                      color: Colors.white,
                                      child: Column(
                                        // mainAxisAlignment: MainAxisAlignment.start,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Card(
                                            color: Colors.green,
                                            child: Row(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.center,
                                              mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceBetween,
                                              children: [
                                                Padding(
                                                    padding: EdgeInsets.only(
                                                        left: 30.0)),
                                                Text(
                                                  "Ratnapark",
                                                  style: TextStyle(
                                                      fontSize: 23.0,
                                                      fontWeight:
                                                          FontWeight.bold,
                                                      color: Colors.white),
                                                ),
                                                CircleAvatar(
                                                    backgroundColor:
                                                        Colors.white,
                                                    foregroundColor:
                                                        Colors.green,
                                                    child: Icon(
                                                        FontAwesomeIcons.car))
                                              ],
                                            ),
                                          ),
                                          Divider(),
                                          Center(
                                              child: Text(
                                            "Pass By Vehicles",
                                            style: TextStyle(
                                              fontSize: 22.0,
                                              color: Colors.green,
                                              fontWeight: FontWeight.bold,
                                            ),
                                          )),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '1. Saja Yatayat',
                                              style: TextStyle(
                                                  fontSize: 20.0,
                                                  fontWeight: FontWeight.bold,
                                                  color: Colors.green),
                                            ),
                                          ),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '2. Nepal Yatayat',
                                              style: TextStyle(
                                                fontSize: 20.0,
                                                fontWeight: FontWeight.bold,
                                                color: Colors.green,
                                              ),
                                            ),
                                          ),
                                          ListTile(
                                            leading: Icon(FontAwesomeIcons.bus,
                                                color: Colors.green),
                                            title: Text(
                                              '3. Micro Bus',
                                              style: TextStyle(
                                                fontSize: 20.0,
                                                fontWeight: FontWeight.bold,
                                                color: Colors.green,
                                              ),
                                            ),
                                          ),
                                        ],
                                      ));
                                });
                          },
                        ),
                      );
                    },
                  ),
                ],
              ),
            ],
          ),
          Column(
            // mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.end,
            children: [
              Card(
                color: Colors.green,
                child: Row(
                  crossAxisAlignment: CrossAxisAlignment.center,
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Padding(padding: EdgeInsets.only(left: 30.0)),
                    Text(
                      "Kalanki to Koteshwor",
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 23.0,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    CircleAvatar(
                      child: Icon(FontAwesomeIcons.car, color: Colors.green),
                      backgroundColor: Colors.white,
                    )
                  ],
                ),
              ),
              Card(
                child: Center(
                    child: Text(
                  "Possible path",
                  style: TextStyle(
                      fontSize: 22.0,
                      fontWeight: FontWeight.bold,
                      color: Colors.green),
                )),
              ),
              Card(
                child: ExpansionTile(
                  leading: Icon(FontAwesomeIcons.bus, color: Colors.green),
                  title: Text(
                    '1. Direct  approx.${distanceFromKalToKot().toInt()}m',
                    style: TextStyle(
                        fontSize: 20.0,
                        fontWeight: FontWeight.bold,
                        color: Colors.blue),
                  ),
                  children: [
                    Row(
                      children: [
                        Padding(padding: EdgeInsets.only(left: 80)),
                        Text(
                          "1.Mahanagar Yatayat",
                          style: TextStyle(
                              fontWeight: FontWeight.w700,
                              color: Colors.green,
                              fontSize: 16.0),
                        ),
                        Spacer(),
                        Icon(FontAwesomeIcons.solidArrowAltCircleLeft,
                            color: Colors.green),
                        Padding(padding: EdgeInsets.only(left: 20)),
                        Icon(FontAwesomeIcons.solidArrowAltCircleRight,
                            color: Colors.green),
                      ],
                    ),
                    Row(
                      children: [
                        Padding(padding: EdgeInsets.only(left: 80)),
                        Text(
                          "2.Mayur Yatayat",
                          style: TextStyle(
                              fontWeight: FontWeight.w700,
                              color: Colors.green,
                              fontSize: 16.0),
                        ),
                        Spacer(),
                        Icon(FontAwesomeIcons.solidArrowAltCircleLeft,
                            color: Colors.green),
                        Padding(padding: EdgeInsets.only(left: 20)),
                        Icon(FontAwesomeIcons.solidArrowAltCircleRight,
                            color: Colors.green),
                      ],
                    ),
                  ],
                ),
              ),
              Card(
                child: ExpansionTile(
                  leading: Icon(FontAwesomeIcons.bus, color: Colors.green),
                  title: Text(
                    '2.Alternative way ${distanceFromKalToBalkhuToKot().toInt()}m',
                    style: TextStyle(
                        fontSize: 20.0,
                        fontWeight: FontWeight.bold,
                        color: Colors.orange),
                  ),
                  children: [
                    Text(
                      "Note: shortest path but less vehicle.",
                      style: TextStyle(
                          fontWeight: FontWeight.w700,
                          color: Colors.red,
                          fontSize: 16.0),
                    ),
                    Row(
                      children: [

                        Padding(padding: EdgeInsets.only(left: 80)),
                        Text(
                          "1.Nepal Yatayat",
                          style: TextStyle(
                              fontWeight: FontWeight.w700,
                              color: Colors.green,
                              fontSize: 16.0),
                        ),
                        Spacer(),
                        Icon(FontAwesomeIcons.solidArrowAltCircleLeft,
                            color: Colors.green),
                        Padding(padding: EdgeInsets.only(left: 20)),
                        Icon(FontAwesomeIcons.solidArrowAltCircleRight,
                            color: Colors.green),
                      ],
                    ),

                  ],
                ),
              ),

            ],
          ),
        ],
      ),
    );
  }
}
